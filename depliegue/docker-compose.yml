############# Docker Compose para desplegar una aplicación de librería con métricas y monitoreo #############
# Para correr en segundo plano:
#     docker compose up -d

# Acceder a Grafana: http://localhost:3000
# Acceder a Prometheus: http://localhost:9090
# Acceder al dashboard de Traefik: http://localhost:8888
# Acceder a Consul: http://localhost:8500
# Acceder a la aplicación de autores: http://localhost:8080/app-autores/autores
# Acceder a la aplicación de libros: http://localhost:8080/app-libros/libros

# En la configuración de importación de fuentes de Grafana, para prometheus, la URL es: http://prometheus_metricas:9090

services:
  base_de_datos:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: labcom,2015
      POSTGRES_DB: db_libreria
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "c:/db-libreria:/var/lib/postgresql/data"
    ports:
      - "5432:5432" # TODO: cambiar de "54321:5432".
    expose:
      - 5432
    # expose en docker-compose.yml hace que el puerto sea accesible para otros servicios del mismo Compose, pero no para
    # el host (mi pc en local).

  metricas_base_datos:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "base_de_datos:5432/db_libreria?sslmode=disable"
      DATA_SOURCE_USER: "postgres"
      DATA_SOURCE_PASSWORD: "labcom,2015"
    expose:
      - 9187

  consul:
    image: consul:1.15.4
    command:
      agent -dev
      -ui
      -bind 0.0.0.0
      -client 0.0.0.0
    ports:
      - "8500:8500"
    expose:
      - 8500

  traefik_proxy:
    image: traefik:3.4.1
    command: |
      --api.insecure=true
      --api.dashboard=true
      --providers.ConsulCatalog.exposedByDefault=false
      --providers.consulCatalog.refreshInterval=5s
      --providers.consulCatalog.endpoint.address=consul:8500
      --entrypoints.http.address=:"80"
      --entrypoints.metrics.address=:"8082"
      --metrics.prometheus=true
      --metrics.prometheus.entryPoint=metrics
    ports:
      # "host:contenedor"
      - "8888:8080" # Traefik dashboard
      - "8080:80"   # HTTP
      - "8082:8082" # Metrics
    expose:
      - 80
    depends_on:
      - consul

  autores:
    #image: jcestrella/app-autores:latest
    image: jcestrella/app-autores:v_ip_real
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: labcom,2015
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://base_de_datos:5432/db_libreria
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    expose:
      - 8080
    deploy:
      replicas: 1
    depends_on:
      - base_de_datos
      - consul
    entrypoint: >
      sh -c "
      apk add --no-cache curl bash &&
      curl -o /usr/local/bin/wait-for-it https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh &&
      chmod +x /usr/local/bin/wait-for-it &&
      /usr/local/bin/wait-for-it base_de_datos:5432 -- java -jar /app/app.jar
      "


  libros:
    #image: jcestrella/app-libros:latest
    image: jcestrella/app-libros:v_ip_real
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: labcom,2015
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://base_de_datos:5432/db_libreria
      QUARKUS_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    expose:
      - 8080
    deploy:
      replicas: 1
    depends_on:
      - base_de_datos
      - consul
    entrypoint: >
      sh -c "
      curl -o /usr/local/bin/wait-for-it https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh &&
      chmod +x /usr/local/bin/wait-for-it &&
      /usr/local/bin/wait-for-it base_de_datos:5432 -- java -jar /app/app.jar
      "


  prometheus_metricas:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    expose:
      - 9090
    depends_on:
      - metricas_base_datos
      - consul
      - traefik_proxy
      - autores
      - libros

  grafana_dashboard:
    image: grafana/grafana-oss:latest
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    expose:
      - 3000
    #depends_on:
    #  - prometheus_metricas